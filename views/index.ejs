
<div id="map" style="margin-left:10px;width:98vw;"></div>

<script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"
        integrity="sha512-XQoYMqMTK8LvdxXYG3nZ448hOEQiglfqkJs1NOQV44cWnUrBc8PkAOcXy20w0vlaXaVUearIOBhiXZ5V3ynxwA=="
        crossorigin=""></script>
    <script src="https://unpkg.com/leaflet-control-geocoder/dist/Control.Geocoder.js"></script>
    <script>
        var map_init = L.map('map', {
            center: [22.525, 75.925],
            zoom: 15.4
        });
        var osm = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
        }).addTo(map_init);
        L.Control.geocoder().addTo(map_init);
        if (!navigator.geolocation) {
            console.log("Your browser doesn't support geolocation feature!")
        } else {
            // setInterval(() => {
            //     navigator.geolocation.getCurrentPosition(getPosition)
            // }, 5000);
            navigator.geolocation.watchPosition(getPosition)
        };
        var marker, circle, lat, long, accuracy;
        let marker_array = new Array();
        let marker_arrayn = new Array();

        function getPosition(position) {
            
            lat = position.coords.latitude
            long = position.coords.longitude
            var coordinate=[lat,long]
            console.log(coordinate)
            accuracy = position.coords.accuracy

            if (marker) {
                map_init.removeLayer(marker)
            }

            if (circle) {
                map_init.removeLayer(circle)
            }
            

            marker = L.marker([lat, long])
            circle = L.circle([lat, long], { radius: accuracy })

            var featureGroup = L.featureGroup([marker, circle]).addTo(map_init)
            

          //  map_init.fitBounds(featureGroup.getBounds())
          

            console.log("Your coordinate is: Lat: " + lat + " Long: " + long + " Accuracy: " + accuracy)
        }
   
    //    function add ()
    //    {
        
    //         console.log("driver location added")
    //          drivers.forEach(driver=>{ 
    //             var marker1,circle1
    //             marker1 = L.marker([driver.latitude, driver.longitude])
    //         circle1 = L.circle([lat, long], { radius: accuracy })

    //         var featureGroup = L.featureGroup([marker1]).addTo(map_init)
    //     }) 

    //    }
    </script>
