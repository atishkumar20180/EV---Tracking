
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css"
        integrity="sha512-xodZBNTC5n17Xt2atTPuE1HxjVMSvLVW9ocqUKLsCC5CXdbqCmblAshOMAS6/keqq/sMZMZ19scR4PsZChSR7A=="
        crossorigin="" />
    <link rel="stylesheet" href="https://unpkg.com/leaflet-control-geocoder/dist/Control.Geocoder.css" />
    <style>
        body {
            margin: 0;
            padding: 0;
            z-index: -1;
        }

        #map {
            width: 99%;
            height: 100vh;
        }
    </style>
</head>

<body style="margin-top:3px;">
    <%- include('../partials/header.ejs') %>
    <%- body %>
    <br>
    
    
    
    
</body><script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"
integrity="sha512-XQoYMqMTK8LvdxXYG3nZ448hOEQiglfqkJs1NOQV44cWnUrBc8PkAOcXy20w0vlaXaVUearIOBhiXZ5V3ynxwA=="
crossorigin=""></script>
<script src="https://unpkg.com/leaflet-control-geocoder/dist/Control.Geocoder.js"></script>
<script>
var map_init = L.map('map', {
    center: [22.525, 75.925],
    zoom: 15.4
});
var osm = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
    attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
}).addTo(map_init);
L.Control.geocoder().addTo(map_init);
if (!navigator.geolocation) {
    console.log("Your browser doesn't support geolocation feature!")
} else {
    // setInterval(() => {
    //     navigator.geolocation.getCurrentPosition(getPosition)
    // }, 5000);
    navigator.geolocation.watchPosition(getPosition)
};
var marker, circle, lat, long, accuracy;

function getPosition(position) {
    
    lat = position.coords.latitude
    long = position.coords.longitude
    var coordinate=[lat,long]
    console.log(coordinate)
    accuracy = position.coords.accuracy

    if (marker) {
        map_init.removeLayer(marker)
    }

    if (circle) {
        map_init.removeLayer(circle)
    }

    marker = L.marker([lat, long])
    circle = L.circle([lat, long], { radius: accuracy })

    var featureGroup = L.featureGroup([marker, circle]).addTo(map_init)

  //  map_init.fitBounds(featureGroup.getBounds())
  

    console.log("Your coordinate is: Lat: " + lat + " Long: " + long + " Accuracy: " + accuracy)
}

//    function add ()
//    {

//         console.log("driver location added")
//          drivers.forEach(driver=>{ 
//             var marker1,circle1
//             marker1 = L.marker([driver.latitude, driver.longitude])
//         circle1 = L.circle([lat, long], { radius: accuracy })

//         var featureGroup = L.featureGroup([marker1]).addTo(map_init)
//     }) 

//    }
function sendpost(){
    // navigator.geolocation.watchPosition(getPosition)
     var name = document.getElementById("name").value
     var id = document.getElementById("id").value
     var contact = document.getElementById("contact").value
     var data = new FormData();
     data.append("id", id);
     data.append("name", name);
     data.append("contact", contact);
     data.append("longitude", long);
     data.append("latitude", lat);

     console.log("datareceived");
// (A2) AJAX
     var xhr = new XMLHttpRequest();
     xhr.open("POST", "/drivers");
     xhr.onload = function () {
         console.log(this.response);
         return this.response
     };
     xhr.send(data);
 
 }
</script>
<script>
    var resp=false;
    if(locals.response != null){
        resp=response;
    }
</script>
</html>

